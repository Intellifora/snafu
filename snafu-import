#!/usr/bin/env python3
#
# Snafu: Snake Functions - Import Utility

import subprocess
import json
import os
import sys
import lib.snafu

convert = False
if len(sys.argv) == 2 and sys.argv[1] == "--convert":
	convert = True

lib.snafu.SnafuImport.prepare()

proc = subprocess.run("aws lambda list-functions", stdout=subprocess.PIPE, shell=True)
out = proc.stdout.decode("utf-8")
functions = json.loads(out)
for func in functions["Functions"]:
	funcname = func["FunctionName"]
	print("import", funcname)
	proc = subprocess.run("aws lambda get-function --function-name {}".format(funcname), stdout=subprocess.PIPE, shell=True)
	out = proc.stdout.decode("utf-8")
	function = json.loads(out)
	funccode = function["Code"]["Location"]
	codezip = os.path.join(lib.snafu.SnafuImport.functiondir, funcname + ".zip")
	subprocess.run("wget -q -O {} '{}'".format(codezip, funccode), shell=True)

	codefile, configfile, oldcodefile = lib.snafu.SnafuImport.importfunction(funcname, codezip, func, convert)

	print("+ code: {}".format(codefile))
	print("+ configuration: {}".format(configfile))
	if oldcodefile:
		print("+ converted; old code: {}".format(oldcodefile))
