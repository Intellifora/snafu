#!/usr/bin/env python3
#
# Snafu: Snake Functions - Import Utility

import subprocess
import json
import os
import glob
import shutil
import sys

convert = False
if len(sys.argv) == 2 and sys.argv[1] == "--convert":
	convert = True

functiondir = "functions-local"
os.makedirs(functiondir, exist_ok=True)

proc = subprocess.run("aws lambda list-functions", stdout=subprocess.PIPE, shell=True)
out = proc.stdout.decode("utf-8")
functions = json.loads(out)
for func in functions["Functions"]:
	funcname = func["FunctionName"]
	print("import", funcname)
	proc = subprocess.run("aws lambda get-function --function-name {}".format(funcname), stdout=subprocess.PIPE, shell=True)
	out = proc.stdout.decode("utf-8")
	function = json.loads(out)
	funccode = function["Code"]["Location"]
	funcdir = os.path.join(functiondir, funcname)
	os.makedirs(funcdir, exist_ok=True)
	codezip = os.path.join(functiondir, funcname + ".zip")
	subprocess.run("wget -q -O {} '{}'".format(codezip, funccode), shell=True)
	subprocess.run("cd {} && unzip -q ../{}".format(funcdir, os.path.basename(codezip)), shell=True)
	codefiles = glob.glob(os.path.join(funcdir, "*.py"))
	codefile = codefiles[0]
	print("+ code: {}".format(codefile))
	if convert:
		oldcodefile = codefile.replace(".py", ".py2")
		shutil.copyfile(codefile, oldcodefile)
		subprocess.run("2to3 --no-diffs -nw {} 2>/dev/null".format(codefile), shell=True)
		print("+ converted; old code: {}".format(oldcodefile))
		func["Runtime"] = "python3"
	configfile = os.path.join(funcdir, os.path.basename(codefile).split(".")[0] + ".config")
	f = open(configfile, "w")
	json.dump(func, f)
	print("+ configuration: {}".format(configfile))
